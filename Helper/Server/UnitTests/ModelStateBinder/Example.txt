 public abstract class BaseControllerTest
{
	protected TController CreateBinder<TController, TModel>(TController controller, TModel model)
		where TController : Controller
		where TModel : class
	{
		var modelBinder = new ModelBindingContext()
		{
			ModelMetadata = ModelMetadataProviders.Current.GetMetadataForType(() => model, model.GetType()),
			ValueProvider = new NameValueCollectionValueProvider(new NameValueCollection(), CultureInfo.InvariantCulture)
		};

		var binder = new DefaultModelBinder().BindModel(new ControllerContext(), modelBinder);
		controller.ModelState.Clear();
		controller.ModelState.Merge(modelBinder.ModelState);

		return controller;
	}
}